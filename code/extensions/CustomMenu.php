<?php

class CustomMenu extends Extension {

    /**
     * Define constructor otherwise PHP will fall back to calling the function
     * named after the class which throws an error on inital setup
     */
    function __construct() {
        parent::__construct();
    }

    /**
     * Generate an list of items that will be loaded into the custom menu
     *
     * @param $menu template slug for retriving a menu
     * @return ArrayList
     */
    public function CustomMenu($menu = "")
    {
        $menu_items = ArrayList::create();
        $config = SiteConfig::current_site_config();

        if(isset($menu)) {
            // Ensure argument is safe for database
            $menu = Convert::raw2sql($menu);

            $menu_holder = CustomMenuHolder::get()
                ->filter([
                    'SiteID' => $config->ID,
                    'Slug' => $menu
                ])->first();

            if($menu_holder && $menu_holder->Links()->exists()) {
                foreach($menu_holder->Links() as $link) {
                    $object = $link->Object();
                    if ($object->exists()) { 
                        $menu_items->add($object);
                    }
                }
            }
        }

        return $menu_items;
    }

    /**
     * Take a list of custom menu items and render it into a template.
     *
     * @param $menu Template slug generated by the CMS
     * @return string
     */
    public function RenderedCustomMenu($menu = "")
    {
        $vars = array(
            'Slug' => $menu,
            'Menu' => $this->owner->CustomMenu($menu)
        );

        return $this->owner->renderWith('CustomMenu', $vars);
    }
}
